load("//tools/gnu:mips.bzl", "link_elf", "objcopy")
load("//tools/compress:compress.bzl", "compress")

# Link together all the game's object files into a monolithic game UNIX ELF.
link_elf(
    name = "usa_elf",
    srcs = [
        "//src/bootloader:bootcode",
        "//src/cdata:c_data_filler",
        "//src/cfb",
        "//src/decompbuf:decompressbuffer",
        "//src/font",
        "//src/game/GlobalImageTable",
        "//src/game/bg",
        "//src/game/blood:blood_animation",
        "//src/game/blood:blood_decrypt",
        "//src/game/blood:blood_image",
        "//src/game/bond",
        "//src/game/bond:bond_data",
        "//src/game/bondinv",
        "//src/game/bondwalk",
        "//src/game/bondwalk2",
        "//src/game/cheat_buttons",
        "//src/game/chr",
        "//src/game/chr2",
        "//src/game/chrobjdata",
        "//src/game/chrobjhandler",
        "//src/game/cleanupSFXRelated",
        "//src/game/cleanup_alarms",
        "//src/game/cleanup_objectives",
        "//src/game/cleanup_objects",
        "//src/game/convertangleusinginverse",
        "//src/game/debugmenu:deb_loadallmodels",
        "//src/game/debugmenu:debugmenu_08FE00",
        "//src/game/debugmenu:debugmenu_090490",
        "//src/game/decompress",
        "//src/game/dyn",
        "//src/game/eeprom",
        "//src/game/ejectedcartridges",
        "//src/game/fog",
        "//src/game/game_debug",
        "//src/game/gamefile",
        "//src/game/image",
        "//src/game/image_bank",
        "//src/game/initBondDATA",
        "//src/game/initBondDATAdefaults",
        "//src/game/initactorpropstuff",
        "//src/game/initanitable",
        "//src/game/initcameraandthrown",
        "//src/game/initexplosioncasing",
        "//src/game/initgamedata",
        "//src/game/initguards",
        "//src/game/initimages",
        "//src/game/initintromatrices",
        "//src/game/inititemslots",
        "//src/game/initmenus",
        "//src/game/initmttex",
        "//src/game/initnull_0009D0",
        "//src/game/initnull_000BC0",
        "//src/game/initobjects",
        "//src/game/initpathtablelinks",
        "//src/game/initpathtablesomething",
        "//src/game/initunk_0009E0",
        "//src/game/initunk_000B60",
        "//src/game/initunk_005450",
        "//src/game/initunk_005520",
        "//src/game/initunk_007180",
        "//src/game:initunk_007290",
        "//src/game:initunk_0072B0",
        "//src/game:initunk_0073B0",
        "//src/game:initunk_007460",
        "//src/game/initweaponanigroups",
        "//src/game:intro_logos",
        "//src/game/lightfixture",
        "//src/game/loadobjectmodel",
        "//src/game:lvl",
        "//src/game:lvl_2",
        "//src/game:lvl_text",
        "//src/game:mainmenu",
        "//src/game/music",
        "//src/game:null_007970",
        "//src/game/ob",
        "//src/game:objecthandler",
        "//src/game:objecthandler_2",
        "//src/game:objective",
        "//src/game:objective_status",
        "//src/game:objective_status2",
        "//src/game/playerstats",
        "//src/game:prop",
        "//src/game/radar",
        "//src/game:rsp",
        "//src/game:setguscale",
        "//src/game/sin",
        "//src/game/spectrum",
        "//src/game:stan",
        "//src/game:textrelated",
        "//src/game:truncf",
        "//src/game:unk_007800",
        "//src/game:unk_007920",
        "//src/game:unk_007980",
        "//src/game:unk_01B0E0",
        "//src/game:unk_01B240",
        "//src/game:unk_01BAE0",
        "//src/game/matrixmath",
        "//src/game:sqrt_tan_angle_plus_one",
        "//src/game:unk_05AB70",
        "//src/game:unk_05ACB0",
        "//src/game:unk_05AE00",
        "//src/game:unk_05B1E0",
        "//src/game/float2int",
        "//src/game:unk_08DBB0",
        "//src/game:unk_091080",
        "//src/game:unk_092890",
        "//src/game:unk_092E50",
        "//src/game/players",
        "//src/game:unk_09B600",
        "//src/game/random",
        "//src/game:unk_09B7A0",
        "//src/game:unk_09C250",
        "//src/game:unk_0A1DA0",
        "//src/game:unk_0B3200",
        "//src/game:unk_0BC530",
        "//src/game/cpu_cycle_count",
        "//src/game:unk_0CC4C0",
        "//src/game:unk_0D1AC0",
        "//src/game/viewport",
        "//src/game/watch",
        "//src/game/ai:chrai",
        "//src/game/compiletime",
        "//src/game/indy:indy_commands",
        "//src/game/indy:indy_comms",
        "//src/game/mp:mp_music",
        "//src/game/mp:mp_watch",
        "//src/game/mp:mp_weapon",
        "//src/game/othermode:othermodemicrocode",
        "//src/game/zlib",
        "//src/header:rom_header",
        "//src/images:objects",
        "//src/inflate",
        "//src/libultra/src:libultra_c",
        "//src/libultra/src:libultra_s",
        "//src/microcodes/asp:aspboot",
        "//src/microcodes/gsp:gspboot",
        "//src/microcodes/rsp:rspboot",
        "//src/music",
        "//src/obseg:ob_seg",
        "//src/ramrom",
        "//src/romfiles",
        "//src/romfiles:romfiles2",
        "//src/roombuf:room_model_buffer",
        "//src/stacks",
        "//src/start:_start",
        "//src/system:audio",
        "//src/system:boot",
        "//src/system:boss",
        "//src/system/debug:deb",
        "//src/system/debug:deb_print",
        "//src/system/debug:deb_video",
        "//src/system/debug:debug_getlastRA",
        "//src/system/debug:debugmenu",
        "//src/system/debug:debugmenu_vars",
        "//src/system:init",
        "//src/system:joy",
        "//src/system:joy_rumble",
        "//src/system:mema",
        "//src/system:memp",
        "//src/system:music",
        "//src/system:osMapTLB",
        "//src/system:pi",
        "//src/system:ramrom",
        "//src/system:random",
        "//src/system/debug:rmon",
        "//src/system:sched",
        "//src/system:snd",
        "//src/system:speed_graph",
        "//src/system:sprintf",
        "//src/system:str",
        "//src/system:tlb_hardwire",
        "//src/system:tlb_manage",
        "//src/system:tlb_random",
        "//src/system:tlb_resolve",
        "//src/system:token",
        "//src/system/debug:vi",
        "//src/system:video",
    ],
    lds = [
        "//src/segments:usa_ld",
        "//src/n64:constants.ld",
    ],
)

# Fill the empty gaps in the ELF with 0xff.
objcopy(
    name = "usa_gapfilled",
    srcs = [":usa_elf"],
    gapfill = "0xff",
)

# Deflate segments marked for compression.
compress(
    name = "usa_binary",
    srcs = [
        ":usa_elf",
        ":usa_gapfilled",
    ],
)

# Calculate and add the ROM header to the binary and byteswap it to big-endianness to make the final ROM.
genrule(
    name = "usa_z64_rom",
    srcs = [
        ":usa_binary",
    ],
    outs = ["usa.z64"],
    cmd = "./$(location //tools/n64cksum) $< $@",
    tools = ["//tools/n64cksum"],
    visibility = ["//visibility:public"],
)
